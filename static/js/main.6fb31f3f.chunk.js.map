{"version":3,"sources":["components/Statistics/Statistics.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/Notification/Notification.module.css","components/Section/Section.module.css","components/FeedbackOptions/FeedbackOptions.jsx","components/Notification/Notification.jsx","components/Statistics/Statistics.jsx","components/Section/Section.jsx","App.js","index.js"],"names":["module","exports","FeedbackOptions","options","onLeaveFeedback","className","s","btnBlock","map","option","type","btn","name","onClick","Notification","message","nav","Statistics","good","neutral","bad","total","positivePercentage","feautersList","ststicItem","statisticValue","Section","title","children","App","state","event","target","setState","prevState","countTotalFeedback","Object","values","reduce","acc","item","countPositiveFeedbackPercentage","Math","round","keys","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8HACAA,EAAOC,QAAU,CAAC,eAAiB,mCAAmC,aAAe,iCAAiC,WAAa,iC,kBCAnID,EAAOC,QAAU,CAAC,SAAW,kCAAkC,IAAM,+B,oBCArED,EAAOC,QAAU,CAAC,IAAM,4B,gBCAxBD,EAAOC,QAAU,CAAC,MAAQ,yB,qKC0BXC,EAvBS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAClC,OACE,qBAAKC,UAAWC,IAAEC,SAAlB,SACGJ,EAAQK,KAAI,SAAAC,GAAM,OACjB,wBACEC,KAAK,SACLL,UAAWC,IAAEK,IAEbC,KAAMH,EACNI,QAAST,EALX,SAOGK,GAJIA,S,gBCNAK,EAFM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OAAiB,mBAAGV,UAAWC,IAAEU,IAAhB,SAAsBD,K,gBCgC7CE,EA/BI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,qBAAIjB,UAAWC,IAAEiB,aAAjB,UACE,qBAAIlB,UAAWC,IAAEkB,WAAjB,sBACa,sBAAMnB,UAAWC,IAAEmB,eAAnB,SAAoCP,OAEjD,qBAAIb,UAAWC,IAAEkB,WAAjB,yBACgB,sBAAMnB,UAAWC,IAAEmB,eAAnB,SAAoCN,OAEpD,qBAAId,UAAWC,IAAEkB,WAAjB,qBACY,sBAAMnB,UAAWC,IAAEmB,eAAnB,SAAoCL,OAEhD,qBAAIf,UAAWC,IAAEkB,WAAjB,uBACc,sBAAMnB,UAAWC,IAAEmB,eAAnB,SAAoCJ,SAElD,qBAAIhB,UAAWC,IAAEkB,WAAjB,oCAEE,uBAAMnB,UAAWC,IAAEmB,eAAnB,UAAoCH,IAApC,c,iBCHOI,EAdC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,gCACE,oBAAIvB,UAAWC,IAAEqB,MAAjB,SAAyBA,IACxBC,MC2DQC,E,4MA3DbC,MAAQ,CACNZ,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPhB,gBAAkB,SAAA2B,GAChB,IAAMnB,EAAOmB,EAAMC,OAAOpB,KAE1B,EAAKqB,UAAS,SAAAC,GAAS,sBAAQtB,EAAOsB,EAAUtB,GAAQ,O,EAG1DuB,mBAAqB,WAMnB,OALcC,OAAOC,OAAO,EAAKP,OAAOQ,QACtC,SAACC,EAAKC,GAAN,OAAeD,EAAMC,IACrB,I,EAMJC,gCAAkC,WAAO,IAC/BvB,EAAS,EAAKY,MAAdZ,KACFG,EAAQ,EAAKc,qBAGnB,OAFmBd,EAAQqB,KAAKC,MAAOzB,EAAOG,EAAS,KAAO,G,uDAM9D,IAAMlB,EAAUiC,OAAOQ,KAAKC,KAAKf,OAD1B,EAEwBe,KAAKf,MAA5BZ,EAFD,EAECA,KAAMC,EAFP,EAEOA,QAASC,EAFhB,EAEgBA,IAEvB,OACE,qCACE,cAAC,EAAD,CAASO,MAAM,wBAAf,SACE,cAAC,EAAD,CACExB,QAASA,EACTC,gBAAiByC,KAAKzC,oBAG1B,cAAC,EAAD,CAASuB,MAAM,aAAf,SACGkB,KAAKV,qBACJ,cAAC,EAAD,CACEjB,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOwB,KAAKV,mBACZb,mBAAoBuB,KAAKJ,kCAG3B,cAAC,EAAD,CAAc1B,QAAQ,+B,GApDhB+B,aCDlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.6fb31f3f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"statisticValue\":\"Statistics_statisticValue__Gucsn\",\"feautersList\":\"Statistics_feautersList__WU8kA\",\"ststicItem\":\"Statistics_ststicItem__3MxXw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btnBlock\":\"FeedbackOptions_btnBlock__jGCdk\",\"btn\":\"FeedbackOptions_btn__1f19C\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Notification_nav__3hnln\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Section_title__3858M\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './FeedbackOptions.module.css';\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n  return (\r\n    <div className={s.btnBlock}>\r\n      {options.map(option => (\r\n        <button\r\n          type=\"button\"\r\n          className={s.btn}\r\n          key={option}\r\n          name={option}\r\n          onClick={onLeaveFeedback}\r\n        >\r\n          {option}\r\n        </button>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.array.isRequired,\r\n  onLeaveFeedback: PropTypes.func,\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import React from 'react';\r\nimport s from './Notification.module.css';\r\n\r\nconst Notification = ({ message }) => <p className={s.nav}>{message}</p>;\r\n\r\nexport default Notification;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './Statistics.module.css';\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\r\n  return (\r\n    <ul className={s.feautersList}>\r\n      <li className={s.ststicItem}>\r\n        Good:&nbsp;<span className={s.statisticValue}>{good}</span>\r\n      </li>\r\n      <li className={s.ststicItem}>\r\n        Neutral:&nbsp;<span className={s.statisticValue}>{neutral}</span>\r\n      </li>\r\n      <li className={s.ststicItem}>\r\n        Bad:&nbsp;<span className={s.statisticValue}>{bad}</span>\r\n      </li>\r\n      <li className={s.ststicItem}>\r\n        Total:&nbsp;<span className={s.statisticValue}>{total()}</span>\r\n      </li>\r\n      <li className={s.ststicItem}>\r\n        PositivePercentage:&nbsp;\r\n        <span className={s.statisticValue}>{positivePercentage()}%</span>\r\n      </li>\r\n    </ul>\r\n  );\r\n};\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.func,\r\n  positivePercentage: PropTypes.func,\r\n};\r\n\r\nexport default Statistics;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './Section.module.css';\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <div>\r\n      <h2 className={s.title}>{title}</h2>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default Section;\r\n","import React, { Component } from 'react';\n\nimport FeedbackOptions from './components/FeedbackOptions';\nimport Notification from './components/Notification';\nimport Statistics from './components/Statistics';\nimport Section from './components/Section';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  onLeaveFeedback = event => {\n    const name = event.target.name;\n\n    this.setState(prevState => ({ [name]: prevState[name] + 1 }));\n  };\n\n  countTotalFeedback = () => {\n    const total = Object.values(this.state).reduce(\n      (acc, item) => acc + item,\n      0,\n    );\n\n    return total;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    const { good } = this.state;\n    const total = this.countTotalFeedback();\n    const percentage = total ? Math.round((good / total) * 100) : 0;\n\n    return percentage;\n  };\n\n  render() {\n    const options = Object.keys(this.state);\n    const { good, neutral, bad } = this.state;\n\n    return (\n      <>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={options}\n            onLeaveFeedback={this.onLeaveFeedback}\n          />\n        </Section>\n        <Section title=\"Statistics\">\n          {this.countTotalFeedback() ? (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={this.countTotalFeedback}\n              positivePercentage={this.countPositiveFeedbackPercentage}\n            />\n          ) : (\n            <Notification message=\"No feedback given\" />\n          )}\n        </Section>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n//import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals();\n"],"sourceRoot":""}